/////////////////////////////////////////////////////////To run
1.cd HerbistClient
2.ng serve -c development -o


/////////////////////////////////////////////////////////To Build
1.npm run build
2.npm run serve:ssr:HerbistClient


///////////////////////////////////////////////////////// To test ssr
*When build this will replace environment.development.ts with environment.ts
*And will use real api on the server
*And when build this will use environment.ts (real config)
*And if we build by using localhost for api the server.ts will not be able to access docker server and it will not work
1.Build ssr
ng Build
2.Run test on client with ssr(but real api data)
npm run serve:ssr:HerbistClient


///////////////////////////////////////////////////////// Purgecss
1.npm i -D purgecss
2.Create postbuild.js in the root of your project
3.add code from other project in postbuild.js into the file
4.update package.json
"build": "ng build --configuration production --stats-json",
"postbuild": "node postbuild.js",
5.build project using npm run build
7.npm run purgecss (to clear unused css)


///////////////////////////////////////////////////////// Source-map-explorer 
*To see details of chunk
1.npm i source-map-explorer
2.npm run build
3.npx source-map-explorer dist/HerbistClient/browser/chunk-KS2IGI4O.js  


///////////////////////////////////////////////////////// For Production
*First public to https://hub.docker.com/
1.npm install touch-cli -g
2.run "touch Dockerfile" and copy config from other project into this file
3.add "outputPath": "dist/herbistclient", into angular.json
4.npm run build
5.check index.html for preload items(fonts and i18n files) in the html that they changed after built or not
  -if changed then change fonts and i18n files file in index.html to the same name in dist\HerbistClient\browser\media
  -if not changed then do nothings
6.docker build --no-cache . -t herbist-client -f Dockerfile
7.docker login -u sukwibul -p Best0015!@#
8.docker image list (get the latest IMAGE ID and set to 4.)
9.docker tag b0db906cbd10 sukwibul/herbistclient:production-2.0
10.docker push sukwibul/herbistclient:production-2.0
11. open putty
    156.67.216.87 port 8894
    root Z3&2lA72APgtjjDyQj&p
12. nano docker-compose.yml
13. change to image: sukwibul/herbistapi:production-2.0 then save
14. docker-compose up -d

*For reference to remove downloaded docket image on server
docker container stop herbist-client
docker container rm herbist-client
docker image list
ddocker image rm 34c53a14c271
docker-compose up -d

*For reference to update docker image to hub.docker.com
docker build --no-cache . -t herbist-client -f Dockerfile
docker image list
docker tag ae7df9b8297c sukwibul/herbistclient:production-2.0
docker push sukwibul/herbistclient:production-2.0    


///////////////////////////////////////////////////////// Make Dump file for Postgresql
*start with all container running
1.mkdir dump
2.docker-compose exec app_db pg_dumpall -U herbist > dump/dump2025_aug_final.sql
3.then use FileZilla to download that file into pc
4.docker container stop app_db
5.docker container rm app_db
6.docker volume rm root_app_data
7.nano docker-compose.yml //change to latest version
8.nano docker-compose.yml //to add new map folder - ./dump:/dump
9.delete postgres in https://156.67.216.24:8090/docker/manageImages
10.docker-compose up -d //to create new container and new volume
11.sudo docker exec -it app_db bash //login into bash of app_db(posegresql container)
12.psql -U herbist -d HerbistDbDriver < dump/dump2025_aug_final.sql //import old data
13.exit


///////////////////////////////////////////////////////// https://hub.docker.com/












///////////////////////////////////////////////////////// Prettier 
*Add this into package.json file and install "npm install prettier@latest" into the project
1.Add this to package.json
"prettier": {
    "singleAttributePerLine": false,
    "printWidth": 900,
    "semi": true,
    "bracketSameLine": true,
    "bracketSpacing": true,
    "trailingComma": "es5",
    "overrides": [
      {
        "files": "*.html",
        "options": {
          "parser": "angular"
        }
      }
    ]
  },
2.Install "prettier": "^3.6.2" to fix the indent problem (This is not the vscode extension)


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////Reference 
No need this one; Just for reference ////////////////////Mkcert for build ssr
1.Install chocolate
2.open PowelShell with run as administration
3.choco install mkcert
4.mkcert -install
5.(cd.. 2 times to go to c: then run cmd below)
6.mkcert localhost 127.0.0.1 ::1
This will generate two files in your current directory:
localhost+2.pem (certificate)
localhost+2-key.pem (private key)
7.update server.ts code