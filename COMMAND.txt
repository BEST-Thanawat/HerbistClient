/////////////////////////////////////////////////////////To run
1.cd HerbistClient
2.ng serve -c development -o

///////////////////////////////////////////////////////// To test ssr
*When build this will replace environment.development.ts with environment.ts
*And will use real api on the server
*And when build this will use environment.ts (real config)
*And if we build by using localhost for api the server.ts will not be able to access docker server and it will not work
1.Build ssr
ng Build
2.Run test on client with ssr(but real api data)
npm run serve:ssr:HerbistClient

/////////////////////////////////////////////////////////Prettier 
*Add this into package.json file and install "npm install prettier@latest" into the project
1.Add this to package.json
"prettier": {
    "singleAttributePerLine": false,
    "printWidth": 900,
    "semi": true,
    "bracketSameLine": true,
    "bracketSpacing": true,
    "trailingComma": "es5",
    "overrides": [
      {
        "files": "*.html",
        "options": {
          "parser": "angular"
        }
      }
    ]
  },
2.Install "prettier": "^3.6.2" to fix the indent problem (This is not the vscode extension)


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////Reference 
No need this one; Just for reference ////////////////////Mkcert for build ssr
1.Install chocolate
2.open PowelShell with run as administration
3.choco install mkcert
4.mkcert -install
5.(cd.. 2 times to go to c: then run cmd below)
6.mkcert localhost 127.0.0.1 ::1
This will generate two files in your current directory:
localhost+2.pem (certificate)
localhost+2-key.pem (private key)
7.update server.ts code